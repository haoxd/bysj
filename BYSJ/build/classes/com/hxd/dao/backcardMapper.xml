<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxd.dao.backcardMapper">
<!-- 添加二级缓存，以减少数据库的访问量 --> 
<!-- 
eviction="FIFO"  //回收策略为先进先出
flushInterval="60000" //自动刷新时间60s
size="512" //最多缓存512个引用对象
readOnly="true"/> //只读
 -->
 <!-- 1. 映射语句文件中的所有select语句将会被缓存。 
2. 映射语句文件中的所有insert，update和delete语句会刷新缓存。 
3. 缓存会使用Least Recently Used（LRU，最近最少使用的）算法来收回。 
4. 缓存会根据指定的时间间隔来刷新。 
5. 缓存会存储1024个对象 -->
<cache 
size="512" 
readOnly="true"
flushInterval="60000"
eviction="FIFO"
>
</cache>
<insert id="addUserBankCard" parameterType="BankCard">
insert into bankcard
    (backCardNumber,backCardState,bankCardCreateTime,bankCard_User,bankCardName,bankCardSrc)
     values 
    (
    #{backCardNumber},
    #{backCardState},
    #{bankCardCreateTime},
    #{bankCard_User},
    #{bankCardName},
    #{bankCardSrc}
    )


</insert>
<!--  获取总数-->
<select id="getUserBankCardNumber" parameterType="int" resultType="int">
SELECT COUNT(*) FROM bankcard WHERE BankCard_User =#{uid}; 

</select>
<!-- 分页查询 -->
<select id="queryUserBankCardInfo" parameterType="int" resultType="BankCard">
SELECT * FROM bankcard WHERE
 BankCard_User=#{0} 
ORDER BY BankCardCreateTime DESC LIMIT #{1},5

</select>
<delete id="deleateUserBankCard" parameterType="int" >
  DELETE  FROM 
  bankcard
   WHERE backCardId =#{0} AND BankCard_User = #{1};








</delete>
</mapper>